                                        ;------------------------------------------------------------------------
                                        ;-  Written by: Neviksti
                                        ;-     If you use my code, please share your creations with me
                                        ;-     as I am always curious :)
                                        ;------------------------------------------------------------------------
                                        
                                        ;JoyPad variables = $20 to $27
                                        
                                        .ENUM $20
                                        Joy1 		DW		; Current button state of joypad1, bit0=0 if it is a valid joypad
                                        Joy2		DW		;same thing for all pads...
                                        
                                        Joy1Press	DW		; Holds joypad1 keys that are pressed and have been pressed since clearing this mem location
                                        Joy2Press	DW		;same thing for all pads...
                                        
                                        .ENDE
                                        
                                        
                                        .DEFINE HVBJOY	$4212
                                        .DEFINE JOY0	$4218
                                        .DEFINE JOY1	$421A
                                        .DEFINE JOY2	$421C
                                        .DEFINE JOY3	$421E
                                        .DEFINE JOYSER0	$4016
                                        .DEFINE JOYSER1	$4017
                                        .DEFINE WRIO	$4201
                                        
                                        .BANK 0
                                        .ORG HEADER_OFF
                                        .SECTION "JoyInit" SEMIFREE
                                        
                                        JoyInit:
$08                                     	php	
                                        
$C2 $10                                 	rep	#$10	;8 bit mem/A, 16 bit X/Y
$E2 $20                                 	sep	#$20
                                        
$A9 $C0                                 	lda #$C0	;have the automatic read of the SNES read the first pair of JoyPads
$8D $01 $42                             	sta WRIO
                                        
$A2 $00 $00                             	ldx #$0000
$86 $24                                 	stx Joy1Press
$86 $26                                 	stx Joy2Press
                                        
$A9 $31                                 	LDA #%00110001
$8D $00 $42                             	STA $4200   ;Enable JoyPad Read and NMI
                                        
$CB                                     	WAI		;Wait for NMI to fill the variables with real JoyPad data
                                        
                                        ;******* in ZSNES, the auto-read doesn't work unless NMI is enabled... is this correct?
                                        ;
                                        ;	lda $4212
                                        ;	lda $4212
                                        ;
                                        ;_W11:
                                        ;	lda $4212
                                        ;	and #$01
                                        ;	beq _W11		;Wait till automatic JoyPort read starts
                                        ;
                                        ;	jsr GetInput	;fill the variables with real Joypad data
                                        ;
                                        ;_W12:
                                        ;	lda $4212
                                        ;	and #$01
                                        ;	beq _W12		;Wait till automatic JoyPort read starts
                                        ;
                                        ;	jsr GetInput	;fill the variables with real Joypad data
                                        
$28                                     	plp
$60                                     	rts
                                        .ENDS
                                        
                                        .BANK 0
                                        .ORG HEADER_OFF
                                        .SECTION "JoyInput" SEMIFREE
                                        
                                        GetInput:
$08                                     	php
$E2 $20                                 	sep 	#$20	;8 bit mem/A
                                        
$A9 $01                                 	lda #$01
$2C $12 $42                             _W1:	bit $4212
$D0 $FB                                 	bne _W1		;Wait till automatic JoyPort read is complete
                                        	
                                        
$C2 $30                                 	rep	#$30		;16 bit mem/A, 16 bit X/Y
                                        
                                        	; ********** Get Joypads 1,2
                                        
$AD $18 $42                             	lda JOY0		;get JoyPad1
$AA                                     	tax 			
$45 $20                                 	eor Joy1		;A = A xor JoyState = (changes in joy state)
$86 $20                                 	stx Joy1		;update JoyState
$05 $24                                 	ora Joy1Press	;A = (joy changes) or (buttons pressed)
$25 $20                                 	and Joy1		;A = ((joy changes) or (buttons pressed)) and (current joy state)  
$85 $24                                 	sta Joy1Press	;store A = (buttons pressed since last clearing reg) and (button is still down)
                                        
$AD $1A $42                             	lda JOY1		;get JoyPad2
$AA                                     	tax 			
$45 $22                                 	eor Joy2		;A = A xor JoyState = (changes in joy state)
$86 $22                                 	stx Joy2		;update JoyState
$05 $26                                 	ora Joy2Press	;A = (joy changes) or (buttons pressed)
$25 $22                                 	and Joy2		;A = ((joy changes) or (buttons pressed)) and (current joy state)  
$85 $26                                 	sta Joy2Press	;store A = (buttons pressed since last clearing reg) and (button is still down)
                                        
                                        	; ********** Make sure Joypads 1,2 are valid
                                        
$E2 $30                                 	sep #$30		;A/mem = 8bit, X/Y = 8bit
$AD $16 $40                             	lda JOYSER0
$49 $01                                 	eor #$01
$29 $01                                 	and #$01		; A = -bit0 of JoySer0
$05 $20                                 	ora Joy1		
$85 $20                                 	sta Joy1		; joy state = (joy state) or A.... so bit0 of Joy1State = 0 only if it is a valid joypad
                                        
$AD $17 $40                             	lda JOYSER1
$49 $01                                 	eor #$01
$29 $01                                 	and #$01		; A = -bit0 of JoySer1
$05 $22                                 	ora Joy2		
$85 $22                                 	sta Joy2		; joy state = (joy state) or A.... so bit0 of Joy1State = 0 only if it is a valid joypad
                                        
                                        	; ********** Change all invalid joypads to have a state of no button presses
                                        
$C2 $30                                 	rep #$30		;A/mem = 16bit, X/Y = 16bit
                                        
$A2 $01 $00                             	ldx #$0001
$A9 $0F $00                             	lda #$000F
                                        
$24 $20                                 	bit Joy1		; A = joy state, if any of the bottom 4 bits are on... either nothing is plugged
$F0 $04                                 	beq _joy2		; into the joy port, or it is not a joypad
$86 $20                                 	stx Joy1		; if it is not a valid joypad put $0001 into the 2 joy state variables
$64 $24                                 	stz Joy1Press
                                        
                                        _joy2:
$24 $22                                 	bit Joy2		; A = joy state, if any of the bottom 4 bits are on... either nothing is plugged
$F0 $04                                 	beq _done		; into the joy port, or it is not a joypad
$86 $22                                 	stx Joy2		; if it is not a valid joypad put $0001 into the 2 joy state variables
$64 $26                                 	stz Joy2Press
                                        
                                        _done:
$28                                     	plp
$60                                     	rts
                                        
                                        .ENDS
