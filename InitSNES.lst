                                        ;------------------------------------------------------------------------
                                        ;-  Written by: Neviksti
                                        ;-     If you use my code, please share your creations with me
                                        ;-     as I am always curious :)
                                        ;------------------------------------------------------------------------
                                        
                                        
                                        ;----------------------------------------------------------------------------
                                        ; InitializeSNES -- my "standard" initialization of SNES memory and registers
                                        ;----------------------------------------------------------------------------
                                        .MACRO InitializeSNES
                                          sei                     ;disable interrupts
                                          clc                     ;switch to native mode
                                          xce
                                        
                                          REP #$38		; mem/A = 16 bit, X/Y = 16 bit
                                        			;decimal mode off
                                        
                                          LDX #$1FFF	;Setup the stack
                                          TXS			;Transfer Index X to Stack Pointer Register
                                        
                                          ;do the rest of the initialization in a routine
                                          JSL $008000
                                        
                                          SEP #$20		; mem/A = 8 bit
                                        .ENDM
                                        
                                        ;----------------------------------------------------------------------------
                                        
                                        .BANK 0 SLOT 0
                                        .ORG HEADER_OFF
                                        .SECTION "InitSNESCode" FORCE
                                        .BASE $C0		;FAST HiRom
                                        InitSNES:
$4B                                       PHK			;set Data Bank = Program Bank
$AB                                       PLB
                                        
$A9 $00                                   LDA #$0000	;set Direct Page = $0000
$5B                                       TCD			;Transfer Accumulator to Direct Register
                                        
$AE $FD $1F                               LDX $1FFD		;we clear all the mem at one point ...
$8E $72 $43                               STX $4372  	;so save the return address in a place that won't get overwritten
$AE $FF $1F                               LDX $1FFF
$8E $74 $43                               STX $4374
                                        
$E2 $20                                   SEP #$20		; mem/A = 8 bit
                                        
$A9 $8F                                   LDA #$8F
$8D $00 $21                               STA $2100		;turn screen off for now, set brightness to normal
                                        
$A2 $01 $21                               LDX #$2101
                                        _Loop00:		;regs $2101-$210C
$74 $00                                   STZ $00,X		;set Sprite,Character,Tile sizes to lowest, and set addresses to $0000
$E8                                       INX
$E0 $0D $21                               CPX #$210D
$D0 $F8                                   BNE _Loop00
                                        
                                        _Loop01:		;regs $210D-$2114
$74 $00                                   STZ $00,X		;Set all BG scroll values to $0000
$74 $00                                   STZ $00,X
$E8                                       INX
$E0 $15 $21                               CPX #$2115
$D0 $F6                                   BNE _Loop01
                                        
$A9 $80                                   LDA #$80		;reg $2115
$8D $15 $21                               STA $2115		; Initialize VRAM transfer mode to word-access, increment by 1
                                        
$9C $16 $21                               STZ $2116		;regs $2117-$2117
$9C $17 $21                               STZ $2117		;VRAM address = $0000
                                        
                                        			;reg $2118-$2119
                                        			;VRAM write register... don't need to initialize
                                        
$9C $1A $21                               STZ $211A		;clear Mode7 setting
                                        
$A2 $1B $21                               LDX #$211B
                                        _Loop02:		;regs $211B-$2120
$74 $00                                   STZ $00,X		;clear out the Mode7 matrix values
$74 $00                                   STZ $00,X
$E8                                       INX
$E0 $21 $21                               CPX #$2121
$D0 $F6                                   BNE _Loop02
                                        
                                        			;reg $2121 - Color address, doesn't need initilaizing
                                        			;reg $2122 - Color data, is initialized later
                                        
$A2 $23 $21                               LDX #$2123
                                        _Loop03:		;regs $2123-$2133
$74 $00                                   STZ $00,X		;turn off windows, main screens, sub screens, color addition,
$E8                                       INX			;fixed color = $00, no super-impose (external synchronization),
$E0 $34 $21                               CPX #$2134	;no interlaced mode, normal resolution
$D0 $F8                                   BNE _Loop03
                                        
                                        			;regs $2134-$2136  - multiplication result, no initialization needed
                                        			;reg $2137 - software H/V latch, no initialization needed
                                        			;reg $2138 - Sprite data read, no initialization needed
                                        			;regs $2139-$213A  - VRAM data read, no initialization needed
                                        			;reg $213B - Color RAM data read, no initialization needed
                                        			;regs $213C-$213D  - H/V latched data read, no initialization needed
                                        
$9C $3E $21                               STZ $213E		;reg $213E - might not be necesary, but selects PPU master/slave mode
                                        			;reg $213F - PPU status flag, no initialization needed
                                        
                                        			;reg $2140-$2143 - APU communication regs, no initialization required
                                        
                                        			;reg $2180  -  read/write WRAM register, no initialization required
                                        			;reg $2181-$2183  -  WRAM address, no initialization required
                                        
                                        			;reg $4016-$4017  - serial JoyPad read registers, no need to initialize
                                        
                                        
$9C $00 $42                               STZ $4200		;reg $4200  - disable timers, NMI,and auto-joyread
                                        
$A9 $FF                                   LDA #$FF
$8D $01 $42                               STA $4201		;reg $4201  - programmable I/O write port, initalize to allow reading at in-port
                                        
                                        			;regs $4202-$4203  - multiplication registers, no initialization required
                                        			;regs $4204-$4206  - division registers, no initialization required
                                        
                                        			;regs $4207-$4208  - Horizontal-IRQ timer setting, since we disabled this, it is OK to not init
                                        			;regs $4209-$420A  - Vertical-IRQ timer setting, since we disabled this, it is OK to not init
                                        
$9C $0B $42                               STZ $420B		;reg $420B  - turn off all general DMA channels
$9C $0C $42                               STZ $420C		;reg $420C  - turn off all H-MA channels
                                        
$9C $0D $42                               STZ $420D		;reg $420D  - ROM access time to slow (2.68Mhz)
                                        
$AD $10 $42                               LDA $4210		;reg $4210  - NMI status, reading resets
                                        
                                        			;reg $4211  - IRQ status, no need to initialize
                                        			;reg $4212  - H/V blank and JoyRead status, no need to initialize
                                        			;reg $4213  - programmable I/O inport, no need to initialize
                                        
                                        			;reg $4214-$4215  - divide results, no need to initialize
                                        			;reg $4216-$4217  - multiplication or remainder results, no need to initialize
                                        
                                        			;regs $4218-$421f  - JoyPad read registers, no need to initialize
                                        
                                        			;regs $4300-$437F
                                        			;no need to intialize because DMA was disabled above
                                        			;also, we're not sure what all of the registers do, so it is better to leave them at
                                        			;their reset state value
                                        
$20 $CE $80                               JSR ClearVRAM      ;Reset VRAM
$20 $02 $81                               JSR ClearPalette   ;Reset colors
                                        
                                          ;**** clear Sprite tables ********
                                        
$9C $02 $21                               STZ $2102	;sprites initialized to be off the screen, palette 0, character 0
$9C $03 $21                               STZ $2103
$A2 $80 $00                               LDX #$0080
$A9 $F0                                   LDA #$F0
                                        _Loop08:
$8D $04 $21                               STA $2104	;set X = 240
$8D $04 $21                               STA $2104	;set Y = 240
$9C $04 $21                               STZ $2104	;set character = $00
$9C $04 $21                               STZ $2104	;set priority=0, no flips
$CA                                       DEX
$D0 $F1                                   BNE _Loop08
                                        
$A2 $20 $00                               LDX #$0020
                                        _Loop09:
$9C $04 $21                               STZ $2104		;set size bit=0, x MSB = 0
$CA                                       DEX
$D0 $FA                                   BNE _Loop09
                                        
                                          ;**** clear WRAM ********
                                        
$9C $81 $21                               STZ $2181		;set WRAM address to $000000
$9C $82 $21                               STZ $2182
$9C $83 $21                               STZ $2183
                                        
$A2 $08 $80                               LDX #$8008
$8E $00 $43                               STX $4300         ;Set DMA mode to fixed source, BYTE to $2180
$A2 $CD $80                               LDX #wram_fill_byte
$8E $02 $43                               STX $4302         ;Set source offset
$A9 $C0                                   LDA #:wram_fill_byte
$8D $04 $43                               STA $4304         ;Set source bank
$A2 $F0 $FF                               LDX #$FFF0                                                    ;MODIFICAÇÃO MINHA AQUI! Apenas para testar a RAM quando o console liga. Bote #$0000 pro original.
$8E $05 $43                               STX $4305         ;Set transfer size to 64k bytes
$A9 $01                                   LDA #$01
$8D $0B $42                               STA $420B         ;Initiate transfer
                                        
$A9 $01                                   LDA #$01          ;now set the next 64k bytes
$8D $0B $42                               STA $420B         ;Initiate transfer
                                        
$4B                                       PHK			;make sure Data Bank = Program Bank
$AB                                       PLB
                                        
$58                                       CLI			;enable interrupts again
                                        
$AE $72 $43                               LDX $4372  	;get our return address...
$8E $FD $1F                               STX $1FFD
$AD $74 $43                               LDA $4374
$8D $FF $1F                               STA $1FFF
$6B                                       RTL
                                        
                                        wram_fill_byte:
$00                                     .db $00
                                        
                                        ;----------------------------------------------------------------------------
                                        ; ClearVRAM -- Sets every byte of VRAM to zero
                                        ; In: None
                                        ; Out: None
                                        ; Modifies: flags
                                        ;----------------------------------------------------------------------------
                                        ClearVRAM:
$48                                        pha
$DA                                        phx
$08                                        php
                                        
$C2 $30                                    REP #$30		; mem/A = 8 bit, X/Y = 16 bit
$E2 $20                                    SEP #$20
                                        
$A9 $80                                    LDA #$80
$8D $15 $21                                STA $2115         ;Set VRAM port to word access
$A2 $09 $18                                LDX #$1809
$8E $00 $43                                STX $4300         ;Set DMA mode to fixed source, WORD to $2118/9
$A2 $00 $00                                LDX #$0000
$8E $16 $21                                STX $2116         ;Set VRAM port address to $0000
$86 $00                                    STX $0000         ;Set $00:0000 to $0000 (assumes scratchpad ram)
$8E $02 $43                                STX $4302         ;Set source address to $xx:0000
$A9 $00                                    LDA #$00
$8D $04 $43                                STA $4304         ;Set source bank to $00
$A2 $FF $FF                                LDX #$FFFF
$8E $05 $43                                STX $4305         ;Set transfer size to 64k-1 bytes
$A9 $01                                    LDA #$01
$8D $0B $42                                STA $420B         ;Initiate transfer
                                        
$9C $19 $21                                STZ $2119         ;clear the last byte of the VRAM
                                        
$28                                        plp
$FA                                        plx
$68                                        pla
$60                                        RTS
                                        
                                        ;----------------------------------------------------------------------------
                                        ; ClearPalette -- Reset all palette colors to zero
                                        ; In: None
                                        ; Out: None
                                        ; Modifies: flags
                                        ;----------------------------------------------------------------------------
                                        ClearPalette:
$DA                                        PHX
$08                                        PHP
$C2 $30                                    REP #$30		; mem/A = 8 bit, X/Y = 16 bit
$E2 $20                                    SEP #$20
                                        
$9C $21 $21                                STZ $2121
$A2 $00 $01                                LDX #$0100
                                        ClearPaletteLoop:
$9C $22 $21                                STZ $2122
$CA                                        DEX
$D0 $FA                                    BNE ClearPaletteLoop
                                        
$28                                        PLP
$FA                                        PLX
$60                                        RTS
                                        
                                        .ENDS
